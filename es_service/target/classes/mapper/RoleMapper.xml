<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="org.es.model.Role">
    <id column="NO" jdbcType="INTEGER" property="no" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NO, ROLE_NAME
  </sql>
   <select id="selectByConditon" parameterType="org.es.model.Role" resultType="map">
		
		SELECT b.NO,b.role_name roleName,GROUP_CONCAT(c.auth_name) authoName
		FROM role b LEFT JOIN role_autho a ON a.ROL_NO=b.NO
		LEFT JOIN authority c ON a.auth_no = c.auth_no
		where 1 =1 
		<if test="no!=null">
			and b.no = #{no}
		</if>
		GROUP BY b.NO
		
  </select>
  <select id="getAuthSelected" parameterType="int" resultType="map">
  		SELECT a.auth_no authNo,a.auth_name authName,IFNULL(GROUP_CONCAT(d.no),-1) mark
  	FROM
	authority a LEFT JOIN role_autho ra ON a.auth_NO=ra.auth_no
	LEFT JOIN (SELECT NO FROM role r WHERE r.NO = #{no}) d ON d.no=ra.rol_no
	GROUP BY a.auth_no
  </select>
  <select id="selectByExample" parameterType="org.es.model.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where NO = #{no,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where NO = #{no,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.es.model.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.es.model.Role" useGeneratedKeys="true" keyProperty="no" keyColumn="no">
    insert into role (NO, ROLE_NAME)
    values (#{no,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.es.model.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        NO,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.es.model.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.no != null">
        NO = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set NO = #{record.no,jdbcType=INTEGER},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.es.model.Role">
    update role
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where NO = #{no,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.es.model.Role">
    update role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR}
    where NO = #{no,jdbcType=INTEGER}
  </update>
</mapper>