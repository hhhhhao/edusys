<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.CourseSelectInfoMapper">
  <resultMap id="BaseResultMap" type="org.es.model.CourseSelectInfo">
    <id column="SELECTNO" jdbcType="VARCHAR" property="selectno" />
    <result column="SNO" jdbcType="VARCHAR" property="sno" />
    <result column="SCHE_NO" jdbcType="VARCHAR" property="scheNo" />
    <result column="ISBOOK" jdbcType="INTEGER" property="isbook" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SELECTNO, SNO, SCHE_NO, ISBOOK
  </sql>
  <select id="selectCourseCondition" parameterType="org.es.model.Schedule"
		resultType="map">
  		SELECT f.*,IFNULL(e.jobno,0) mark FROM(SELECT b.* FROM (
		SELECT
		s.SCHE_NO,s.place,c.course_no,s.jobno,IFNULL(s.classno,0) classno,s.capacity,s.margin,t.tname,c.course_name,c.credit,
		c.weektime,c.totaltime,c.des,s.yeartime,s.termtime,IFNULL(s.grade,0) grade,IFNULL(s.college,0) college,
		IFNULL(s.specialty,0) specialty,start_week,end_week,weekno,jie
		FROM SCHEDULE s,course c,teacher t
		WHERE s.course_no = c.course_no AND t.jobno = s.jobno
		 AND s.yeartime = #{yeartime} AND s.termtime = #{termtime}
		
		) b
		) f
		LEFT JOIN (SELECT o.JOBNO FROM course_select_info m,SCHEDULE n,teacher o WHERE m.SCHE_NO = n.SCHE_NO AND
			n.JOBNO = o.JOBNO AND m.SNO=#{sno}) e ON f.jobno = e.jobno
		WHERE  1=1 
		<if test="yeartime!=null">
			and f.yeartime = #{yeartime}
		</if>
		<if test="termtime!=null">
			and f.termtime = #{termtime}
		</if>
		<if test="classno!=null">
			 	and(f.classno=0 or f.classno = #{classno})
			</if>
			<if test="specialty!=null">
			 	and(f.specialty=0 or f.specialty = #{specialty})
			</if>
			<if test="college!=null">
				and (f.college=0 or f.college = #{college})
			</if>
			<if test="grade!=null">
				and (f.grade=0 or f.grade = #{grade})
			</if>
			<if test="jobno!=null">
				and f.jobno = #{jobno}
			</if>
			<if test="mark!=null">
				and IFNULL(e.jobno,0)
			</if>
  </select>
  <select id="selectByCondition" parameterType="org.es.service.student.selectcourse.SelectCourseCondition" resultType="map">
  	  select * from 
  	  v_selectcourse_info
  	  <where>
  	  	 <if test="sno!=null">
  	  	   and	sno = #{sno}
  	  	 </if>
  	  	 <if test="yeartime!=null">
  	  	 	and yeartime = #{yeartime}
  	  	 </if>
  	  	 <if test="termtime!=null">
  	  	 	and termtime = #{termtime}
  	  	 </if>
  	  	 <if test="tno!=null">
  	  	 	and jobno = #{tno}
  	  	 	group by course_no
  	  	 </if>
  	  </where>
  </select>
  <delete id="deleteCourseByCondition" parameterType="org.es.service.student.selectcourse.SelectCourseCondition">
  	 DELETE FROM course_select_info  WHERE  sche_no IN(SELECT sche_no FROM SCHEDULE b WHERE b.course_no = #{courseNo}) AND sno = #{sno} AND sche_no != #{scheNo};
  </delete>
  <select id="selectByExample" parameterType="org.es.model.CourseSelectInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_select_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_select_info
    where SELECTNO = #{selectno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course_select_info
    where SELECTNO = #{selectno,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.es.model.CourseSelectInfoExample">
    delete from course_select_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.es.model.CourseSelectInfo">
    insert into course_select_info (SELECTNO, SNO, SCHE_NO, 
      ISBOOK)
    values (#{selectno,jdbcType=VARCHAR}, #{sno,jdbcType=VARCHAR}, #{scheNo,jdbcType=VARCHAR}, 
      #{isbook,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.es.model.CourseSelectInfo">
    insert into course_select_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="selectno != null">
        SELECTNO,
      </if>
      <if test="sno != null">
        SNO,
      </if>
      <if test="scheNo != null">
        SCHE_NO,
      </if>
      <if test="isbook != null">
        ISBOOK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="selectno != null">
        #{selectno,jdbcType=VARCHAR},
      </if>
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="scheNo != null">
        #{scheNo,jdbcType=VARCHAR},
      </if>
      <if test="isbook != null">
        #{isbook,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.es.model.CourseSelectInfoExample" resultType="java.lang.Long">
    select count(*) from course_select_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_select_info
    <set>
      <if test="record.selectno != null">
        SELECTNO = #{record.selectno,jdbcType=VARCHAR},
      </if>
      <if test="record.sno != null">
        SNO = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.scheNo != null">
        SCHE_NO = #{record.scheNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isbook != null">
        ISBOOK = #{record.isbook,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_select_info
    set SELECTNO = #{record.selectno,jdbcType=VARCHAR},
      SNO = #{record.sno,jdbcType=VARCHAR},
      SCHE_NO = #{record.scheNo,jdbcType=VARCHAR},
      ISBOOK = #{record.isbook,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.es.model.CourseSelectInfo">
    update course_select_info
    <set>
      <if test="sno != null">
        SNO = #{sno,jdbcType=VARCHAR},
      </if>
      <if test="scheNo != null">
        SCHE_NO = #{scheNo,jdbcType=VARCHAR},
      </if>
      <if test="isbook != null">
        ISBOOK = #{isbook,jdbcType=INTEGER},
      </if>
    </set>
    where SELECTNO = #{selectno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.es.model.CourseSelectInfo">
    update course_select_info
    set SNO = #{sno,jdbcType=VARCHAR},
      SCHE_NO = #{scheNo,jdbcType=VARCHAR},
      ISBOOK = #{isbook,jdbcType=INTEGER}
    where SELECTNO = #{selectno,jdbcType=VARCHAR}
  </update>
</mapper>