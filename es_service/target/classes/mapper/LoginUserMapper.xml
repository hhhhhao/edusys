<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.LoginUserMapper">
  <resultMap id="BaseResultMap" type="org.es.model.LoginUser">
    <id column="NO" jdbcType="INTEGER" property="no" />
    <result column="ACCOUNT" jdbcType="VARCHAR" property="account" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="USER_MARK" jdbcType="INTEGER" property="userMark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NO, ACCOUNT, PASSWORD, USER_MARK
  </sql>
  <select id="selectByConditon" parameterType="org.es.model.LoginUser" resultType="map">
		
		SELECT b.NO,b.ACCOUNT,GROUP_CONCAT(c.ROLE_NAME) roleName
		FROM login_user b LEFT JOIN user_role a ON a.USER_NO=b.NO
		LEFT JOIN role c ON a.ROL_NO = c.NO
		where 1=1
		<if test="account!=null">
			and b.account = #{account}
		</if>
		GROUP BY b.NO,b.ACCOUNT
  </select>
  <select id="getRolesSelected" parameterType="int" resultType="map">
  	SELECT r.no,r.role_name roleName,r.no roleId,IFNULL(GROUP_CONCAT(d.no),0) mark
  	FROM
	role r LEFT JOIN user_role ur ON ur.rol_no=r.no
	LEFT JOIN (SELECT NO FROM login_user lu WHERE lu.no = #{userId}) d ON d.no=ur.user_no
	GROUP BY r.no
  </select>
  <select id="selectByExample" parameterType="org.es.model.LoginUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_user
    where NO = #{no,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_user
    where NO = #{no,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.es.model.LoginUserExample">
    delete from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="no" keyColumn="no" parameterType="org.es.model.LoginUser">
    insert into login_user (NO, ACCOUNT, PASSWORD, 
      USER_MARK)
    values (#{no,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userMark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.es.model.LoginUser">
    insert into login_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        NO,
      </if>
      <if test="account != null">
        ACCOUNT,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="userMark != null">
        USER_MARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userMark != null">
        #{userMark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.es.model.LoginUserExample" resultType="java.lang.Long">
    select count(*) from login_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login_user
    <set>
      <if test="record.no != null">
        NO = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        ACCOUNT = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userMark != null">
        USER_MARK = #{record.userMark,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login_user
    set NO = #{record.no,jdbcType=INTEGER},
      ACCOUNT = #{record.account,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      USER_MARK = #{record.userMark,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.es.model.LoginUser">
    update login_user
    <set>
      <if test="account != null">
        ACCOUNT = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userMark != null">
        USER_MARK = #{userMark,jdbcType=INTEGER},
      </if>
    </set>
    where NO = #{no,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.es.model.LoginUser">
    update login_user
    set ACCOUNT = #{account,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      USER_MARK = #{userMark,jdbcType=INTEGER}
    where NO = #{no,jdbcType=INTEGER}
  </update>
</mapper>