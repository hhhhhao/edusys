<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.ClassroomMapper">
	<resultMap id="BaseResultMap" type="org.es.model.Classroom">
		<id column="NO" jdbcType="INTEGER" property="no" />
		<result column="CLASSNO" jdbcType="VARCHAR" property="classno" />
		<result column="BUILDINGNO" jdbcType="VARCHAR" property="buildingno" />
		<result column="TOWERNO" jdbcType="VARCHAR" property="towerno" />
		<result column="PLACENO" jdbcType="VARCHAR" property="placeno" />
		<result column="CAPACITY" jdbcType="INTEGER" property="capacity" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		NO, CLASSNO, BUILDINGNO, TOWERNO, PLACENO, CAPACITY
	</sql>
	<sql id="Where_Condition">
	       <if test="buildingno!=null">
	       	 and buildingno = #{buildingno}
	       </if>
	        <if test="towerno!=null">
	        and towerno = #{towerno}
	        </if>
	        <if test="placeno!=null">
	        and placeno = #{placeno}
	        </if>
	        <if test="capacity!=null">
	        and abs(capacity - #{capacity}) <![CDATA[<]]> 10
	        </if>
	</sql>
	<select id="selectByCondition" parameterType="org.es.model.RoomUseInfo"
		resultType="map">
		SELECT * FROM
		classroom a WHERE
		NOT EXISTS(
		SELECT 1 FROM
		ROOM_USE_INFO b WHERE a.no = b.room_no and 1 = 1

		<if test="startWeek!=null and endWeek!=null">
   <![CDATA[
   AND
    (
    (start_week <= #{startWeek}  AND  #{startWeek} <= end_week) 
    OR 
    (start_week <= #{endWeek}  AND  #{endWeek} <= end_week)
 
    )
   
   ]]>

		</if>
		<if test="weekth!=null">
			AND
			weekth = #{weekth}
		</if>
		<if test="jie!=null">
			AND
			jIe = #{jie}
		</if>
        )
	</select>
	<select id="selectAllByCondition" parameterType="org.es.model.Classroom" resultType="map">
		   SELECT a.NO,CLASSNO,BUILDINGNO,TOWERNO,PLACENO,CAPACITY,GROUP_CONCAT(start_week) START_WEEK,GROUP_CONCAT(END_WEEK) END_WEEK,GROUP_CONCAT(WEEKTH) WEEKTH, GROUP_CONCAT(JIE) JIE,GROUP_CONCAT(MEMO) MEMO FROM classroom a LEFT JOIN room_use_info b
         ON a.no = b.room_no  WHERE 1 = 1
		<include refid="Where_Condition"/>
		
		GROUP BY classno
	</select>
	<select id="selectByExample" parameterType="org.es.model.ClassroomExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from classroom
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from classroom
		where NO = #{no,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from classroom
		where NO = #{no,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.es.model.ClassroomExample">
		delete from classroom
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.es.model.Classroom">
		insert into classroom (NO, CLASSNO, BUILDINGNO,
		TOWERNO, PLACENO, CAPACITY
		)
		values (#{no,jdbcType=INTEGER}, #{classno,jdbcType=VARCHAR},
		#{buildingno,jdbcType=VARCHAR},
		#{towerno,jdbcType=VARCHAR}, #{placeno,jdbcType=VARCHAR}, #{capacity,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.es.model.Classroom">
		insert into classroom
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="no != null">
				NO,
			</if>
			<if test="classno != null">
				CLASSNO,
			</if>
			<if test="buildingno != null">
				BUILDINGNO,
			</if>
			<if test="towerno != null">
				TOWERNO,
			</if>
			<if test="placeno != null">
				PLACENO,
			</if>
			<if test="capacity != null">
				CAPACITY,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="no != null">
				#{no,jdbcType=INTEGER},
			</if>
			<if test="classno != null">
				#{classno,jdbcType=VARCHAR},
			</if>
			<if test="buildingno != null">
				#{buildingno,jdbcType=VARCHAR},
			</if>
			<if test="towerno != null">
				#{towerno,jdbcType=VARCHAR},
			</if>
			<if test="placeno != null">
				#{placeno,jdbcType=VARCHAR},
			</if>
			<if test="capacity != null">
				#{capacity,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.es.model.ClassroomExample"
		resultType="java.lang.Long">
		select count(*) from classroom
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update classroom
		<set>
			<if test="record.no != null">
				NO = #{record.no,jdbcType=INTEGER},
			</if>
			<if test="record.classno != null">
				CLASSNO = #{record.classno,jdbcType=VARCHAR},
			</if>
			<if test="record.buildingno != null">
				BUILDINGNO = #{record.buildingno,jdbcType=VARCHAR},
			</if>
			<if test="record.towerno != null">
				TOWERNO = #{record.towerno,jdbcType=VARCHAR},
			</if>
			<if test="record.placeno != null">
				PLACENO = #{record.placeno,jdbcType=VARCHAR},
			</if>
			<if test="record.capacity != null">
				CAPACITY = #{record.capacity,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update classroom
		set NO = #{record.no,jdbcType=INTEGER},
		CLASSNO = #{record.classno,jdbcType=VARCHAR},
		BUILDINGNO = #{record.buildingno,jdbcType=VARCHAR},
		TOWERNO = #{record.towerno,jdbcType=VARCHAR},
		PLACENO = #{record.placeno,jdbcType=VARCHAR},
		CAPACITY = #{record.capacity,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.es.model.Classroom">
		update classroom
		<set>
			<if test="classno != null">
				CLASSNO = #{classno,jdbcType=VARCHAR},
			</if>
			<if test="buildingno != null">
				BUILDINGNO = #{buildingno,jdbcType=VARCHAR},
			</if>
			<if test="towerno != null">
				TOWERNO = #{towerno,jdbcType=VARCHAR},
			</if>
			<if test="placeno != null">
				PLACENO = #{placeno,jdbcType=VARCHAR},
			</if>
			<if test="capacity != null">
				CAPACITY = #{capacity,jdbcType=INTEGER},
			</if>
		</set>
		where NO = #{no,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.es.model.Classroom">
		update classroom
		set CLASSNO = #{classno,jdbcType=VARCHAR},
		BUILDINGNO = #{buildingno,jdbcType=VARCHAR},
		TOWERNO = #{towerno,jdbcType=VARCHAR},
		PLACENO = #{placeno,jdbcType=VARCHAR},
		CAPACITY = #{capacity,jdbcType=INTEGER}
		where NO = #{no,jdbcType=INTEGER}
	</update>
</mapper>