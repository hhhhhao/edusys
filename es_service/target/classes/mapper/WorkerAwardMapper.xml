<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.WorkerAwardMapper">
  <resultMap id="BaseResultMap" type="org.es.model.WorkerAward">
    <id column="NO" jdbcType="INTEGER" property="no" />
    <result column="AWARDTIME" jdbcType="TIMESTAMP" property="awardtime" />
    <result column="DES" jdbcType="VARCHAR" property="des" />
    <result column="WORKER_NO" jdbcType="INTEGER" property="workerNo" />
    <result column="WORKER_NAME" jdbcType="VARCHAR" property="workName"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NO, AWARDTIME, DES, WORKER_NO,WORKER_NAME
  </sql>
  <select id="selectByExample" parameterType="org.es.model.WorkerAwardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from worker_award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from worker_award
    where NO = #{no,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from worker_award
    where NO = #{no,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.es.model.WorkerAwardExample">
    delete from worker_award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.es.model.WorkerAward">
    insert into worker_award (NO, AWARDTIME, DES, 
      WORKER_NO,WORKER_NAME)
    values (#{no,jdbcType=INTEGER}, #{awardtime,jdbcType=TIMESTAMP}, #{des,jdbcType=VARCHAR}, 
      #{workerNo,jdbcType=INTEGER},#{workName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.es.model.WorkerAward">
    insert into worker_award
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        NO,
      </if>
      <if test="awardtime != null">
        AWARDTIME,
      </if>
      <if test="des != null">
        DES,
      </if>
      <if test="workerNo != null">
        WORKER_NO,
      </if>
       <if test="workName != null">
        WORKER_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="awardtime != null">
        #{awardtime,jdbcType=TIMESTAMP},
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
      <if test="workerNo != null">
        #{workerNo,jdbcType=INTEGER},
      </if>
       <if test="workName != null">
        #{workName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.es.model.WorkerAwardExample" resultType="java.lang.Long">
    select count(*) from worker_award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update worker_award
    <set>
      <if test="record.no != null">
        NO = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.awardtime != null">
        AWARDTIME = #{record.awardtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.des != null">
        DES = #{record.des,jdbcType=VARCHAR},
      </if>
      <if test="record.workerNo != null">
        WORKER_NO = #{record.workerNo,jdbcType=INTEGER},
      </if>
       <if test="record.workerNo != null">
        WORKER_NAME = #{record.workName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update worker_award
    set NO = #{record.no,jdbcType=INTEGER},
      AWARDTIME = #{record.awardtime,jdbcType=TIMESTAMP},
      DES = #{record.des,jdbcType=VARCHAR},
      WORKER_NO = #{record.workerNo,jdbcType=INTEGER},
      WORKER_NAME = #{record.workName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.es.model.WorkerAward">
    update worker_award
    <set>
      <if test="awardtime != null">
        AWARDTIME = #{awardtime,jdbcType=TIMESTAMP},
      </if>
      <if test="des != null">
        DES = #{des,jdbcType=VARCHAR},
      </if>
      <if test="workerNo != null">
        WORKER_NO = #{workerNo,jdbcType=INTEGER},
      </if>
       <if test="workName != null">
        WORKER_NAME = #{workName,jdbcType=VARCHAR},
      </if>
    </set>
    where NO = #{no,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.es.model.WorkerAward">
    update worker_award
    set AWARDTIME = #{awardtime,jdbcType=TIMESTAMP},
      DES = #{des,jdbcType=VARCHAR},
      WORKER_NO = #{workerNo,jdbcType=INTEGER},
      	WORKER_NAME = #{workName,jdbcType=VARCHAR}
    where NO = #{no,jdbcType=INTEGER}
  </update>
</mapper>