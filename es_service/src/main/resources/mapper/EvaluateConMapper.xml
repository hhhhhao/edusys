<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.EvaluateConMapper">
	<resultMap id="BaseResultMap" type="org.es.model.EvaluateCon">
		<id column="NO" jdbcType="INTEGER" property="no" />
		<result column="YEARTIME" jdbcType="VARCHAR" property="yeartime" />
		<result column="TERMTIME" jdbcType="INTEGER" property="termtime" />
		<result column="CHECK_NO" jdbcType="INTEGER" property="checkNo" />
		<result column="SELECT_NO" jdbcType="INTEGER" property="selectNo" />
		<result column="SNO" jdbcType="VARCHAR" property="sno" />
		<result column="TNO" jdbcType="VARCHAR" property="tno" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		NO, YEARTIME, TERMTIME, CHECK_NO, SELECT_NO, SNO, TNO,COURSE_NO
	</sql>
	<!-- 考评信息 -->
	<select id="getCheckResult" resultType="org.es.service.manager.teacher.TeacherCheckResult"
		parameterType="org.es.service.manager.teacher.TeaCheckQueryCondition">
		select v.course_no courseNo,c.course_name courseName,yeartime yeartime,termtime termtime,content checkContent,jobno jobno,
		youxiu countsYouxiu,lianghao countsLianghao,zhongdeng countsZhongdeng,jige countsJige,
		bujige countsBujige,
		tname tname,col_name college
		from v_check_result v,course c
		where v.course_no = c.course_no
			<if test="yeartime!=null">
				and yeartime = #{yeartime}
			</if>
			<if test="termtime!=null">
				and termtime = #{termtime}
			</if>
			<if test="checkContent!=null">
				and content = #{checkContent}
			</if>
			<if test="tno!=null">
				and jobno = #{tno}
			</if>
			<if test="tname!=null">
				and tname = #{tname}
			</if>
			<if test="college!=null">
				and col_name = #{college}
			</if>
			<if test="courseNo!=null">
				and v.course_no = #{courseNo}
			</if>

	</select>
	<select id="selectByExample" parameterType="org.es.model.EvaluateConExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from evaluate_con
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from evaluate_con
		where NO = #{no,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from evaluate_con
		where NO = #{no,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.es.model.EvaluateConExample">
		delete from evaluate_con
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.es.model.EvaluateCon">
		insert into evaluate_con (NO, YEARTIME, TERMTIME,
		CHECK_NO, SELECT_NO, SNO,
		TNO,COURSE_NO)
		values (#{no,jdbcType=INTEGER}, #{yeartime,jdbcType=VARCHAR},
		#{termtime,jdbcType=INTEGER},
		#{checkNo,jdbcType=INTEGER}, #{selectNo,jdbcType=INTEGER}, #{sno,jdbcType=VARCHAR},
		#{tno,jdbcType=VARCHAR},#{courseNo,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.es.model.EvaluateCon">
		insert into evaluate_con
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="no != null">
				NO,
			</if>
			<if test="yeartime != null">
				YEARTIME,
			</if>
			<if test="termtime != null">
				TERMTIME,
			</if>
			<if test="checkNo != null">
				CHECK_NO,
			</if>
			<if test="selectNo != null">
				SELECT_NO,
			</if>
			<if test="sno != null">
				SNO,
			</if>
			<if test="tno != null">
				TNO,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="no != null">
				#{no,jdbcType=INTEGER},
			</if>
			<if test="yeartime != null">
				#{yeartime,jdbcType=VARCHAR},
			</if>
			<if test="termtime != null">
				#{termtime,jdbcType=INTEGER},
			</if>
			<if test="checkNo != null">
				#{checkNo,jdbcType=INTEGER},
			</if>
			<if test="selectNo != null">
				#{selectNo,jdbcType=INTEGER},
			</if>
			<if test="sno != null">
				#{sno,jdbcType=VARCHAR},
			</if>
			<if test="tno != null">
				#{tno,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.es.model.EvaluateConExample"
		resultType="java.lang.Long">
		select count(*) from evaluate_con
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update evaluate_con
		<set>
			<if test="record.no != null">
				NO = #{record.no,jdbcType=INTEGER},
			</if>
			<if test="record.yeartime != null">
				YEARTIME = #{record.yeartime,jdbcType=VARCHAR},
			</if>
			<if test="record.termtime != null">
				TERMTIME = #{record.termtime,jdbcType=INTEGER},
			</if>
			<if test="record.checkNo != null">
				CHECK_NO = #{record.checkNo,jdbcType=INTEGER},
			</if>
			<if test="record.selectNo != null">
				SELECT_NO = #{record.selectNo,jdbcType=INTEGER},
			</if>
			<if test="record.sno != null">
				SNO = #{record.sno,jdbcType=VARCHAR},
			</if>
			<if test="record.tno != null">
				TNO = #{record.tno,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update evaluate_con
		set NO = #{record.no,jdbcType=INTEGER},
		YEARTIME = #{record.yeartime,jdbcType=VARCHAR},
		TERMTIME = #{record.termtime,jdbcType=INTEGER},
		CHECK_NO = #{record.checkNo,jdbcType=INTEGER},
		SELECT_NO = #{record.selectNo,jdbcType=INTEGER},
		SNO = #{record.sno,jdbcType=VARCHAR},
		TNO = #{record.tno,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.es.model.EvaluateCon">
		update evaluate_con
		<set>
			<if test="yeartime != null">
				YEARTIME = #{yeartime,jdbcType=VARCHAR},
			</if>
			<if test="termtime != null">
				TERMTIME = #{termtime,jdbcType=INTEGER},
			</if>
			<if test="checkNo != null">
				CHECK_NO = #{checkNo,jdbcType=INTEGER},
			</if>
			<if test="selectNo != null">
				SELECT_NO = #{selectNo,jdbcType=INTEGER},
			</if>
			<if test="sno != null">
				SNO = #{sno,jdbcType=VARCHAR},
			</if>
			<if test="tno != null">
				TNO = #{tno,jdbcType=VARCHAR},
			</if>
		</set>
		where NO = #{no,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.es.model.EvaluateCon">
		update evaluate_con
		set YEARTIME = #{yeartime,jdbcType=VARCHAR},
		TERMTIME = #{termtime,jdbcType=INTEGER},
		CHECK_NO = #{checkNo,jdbcType=INTEGER},
		SELECT_NO = #{selectNo,jdbcType=INTEGER},
		SNO = #{sno,jdbcType=VARCHAR},
		TNO = #{tno,jdbcType=VARCHAR}
		where NO = #{no,jdbcType=INTEGER}
	</update>
</mapper>