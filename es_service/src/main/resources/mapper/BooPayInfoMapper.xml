<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.BooPayInfoMapper">
  <resultMap id="BaseResultMap" type="org.es.model.BooPayInfo">
    <id column="NO" jdbcType="INTEGER" property="no" />
    <result column="AMOUNT" jdbcType="DOUBLE" property="amount" />
    <result column="SNO" jdbcType="VARCHAR" property="sno" />
    <result column="BOOKNO" jdbcType="INTEGER" property="bookno" />
    <result column="YEARTIME" jdbcType="VARCHAR" property="yeartime" />
    <result column="TERMTIME" jdbcType="INTEGER" property="termtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NO, AMOUNT, SNO, BOOKNO, YEARTIME, TERMTIME
  </sql>
  <sql id="Where_Condition">
  <where>
  <if test="sno!=null">
  		and sno = #{sno}
  	</if>
  	<if test="sname!=null">
  		and sname = #{sname}
  	</if>
  </where>
  	
  </sql>
  <select id="selectBookPayInfoByCondition" parameterType="org.es.service.manager.book.BookQueryCondition" resultType="map">
  	select * 
  	from v_book_payinfo
    <include refid="Where_Condition"/>
  </select>
  <select id="selectByExample" parameterType="org.es.model.BooPayInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from boo_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from boo_pay_info
    where NO = #{no,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from boo_pay_info
    where NO = #{no,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.es.model.BooPayInfoExample">
    delete from boo_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.es.model.BooPayInfo">
    insert into boo_pay_info (NO, AMOUNT, SNO, 
      BOOKNO, YEARTIME, TERMTIME
      )
    values (#{no,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, #{sno,jdbcType=VARCHAR}, 
      #{bookno,jdbcType=INTEGER}, #{yeartime,jdbcType=VARCHAR}, #{termtime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.es.model.BooPayInfo">
    insert into boo_pay_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        NO,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="sno != null">
        SNO,
      </if>
      <if test="bookno != null">
        BOOKNO,
      </if>
      <if test="yeartime != null">
        YEARTIME,
      </if>
      <if test="termtime != null">
        TERMTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="bookno != null">
        #{bookno,jdbcType=INTEGER},
      </if>
      <if test="yeartime != null">
        #{yeartime,jdbcType=VARCHAR},
      </if>
      <if test="termtime != null">
        #{termtime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.es.model.BooPayInfoExample" resultType="java.lang.Long">
    select count(*) from boo_pay_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update boo_pay_info
    <set>
      <if test="record.no != null">
        NO = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.sno != null">
        SNO = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.bookno != null">
        BOOKNO = #{record.bookno,jdbcType=INTEGER},
      </if>
      <if test="record.yeartime != null">
        YEARTIME = #{record.yeartime,jdbcType=VARCHAR},
      </if>
      <if test="record.termtime != null">
        TERMTIME = #{record.termtime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update boo_pay_info
    set NO = #{record.no,jdbcType=INTEGER},
      AMOUNT = #{record.amount,jdbcType=DOUBLE},
      SNO = #{record.sno,jdbcType=VARCHAR},
      BOOKNO = #{record.bookno,jdbcType=INTEGER},
      YEARTIME = #{record.yeartime,jdbcType=VARCHAR},
      TERMTIME = #{record.termtime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.es.model.BooPayInfo">
    update boo_pay_info
    <set>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="sno != null">
        SNO = #{sno,jdbcType=VARCHAR},
      </if>
      <if test="bookno != null">
        BOOKNO = #{bookno,jdbcType=INTEGER},
      </if>
      <if test="yeartime != null">
        YEARTIME = #{yeartime,jdbcType=VARCHAR},
      </if>
      <if test="termtime != null">
        TERMTIME = #{termtime,jdbcType=INTEGER},
      </if>
    </set>
    where NO = #{no,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.es.model.BooPayInfo">
    update boo_pay_info
    set AMOUNT = #{amount,jdbcType=DOUBLE},
      SNO = #{sno,jdbcType=VARCHAR},
      BOOKNO = #{bookno,jdbcType=INTEGER},
      YEARTIME = #{yeartime,jdbcType=VARCHAR},
      TERMTIME = #{termtime,jdbcType=INTEGER}
    where NO = #{no,jdbcType=INTEGER}
  </update>
</mapper>