<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.es.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="org.es.model.Teacher">
    <id column="JOBNO" jdbcType="VARCHAR" property="jobno" />
    <result column="TNAME" jdbcType="VARCHAR" property="tname" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="COLLEGE" jdbcType="VARCHAR" property="college" />
    <result column="GENDER" jdbcType="INTEGER" property="gender" />
    <result column="NATIVEPLACE" jdbcType="VARCHAR" property="nativeplace" />
    <result column="ENTRYTIME" jdbcType="TIMESTAMP" property="entrytime" />
    <result column="MARITALSTATUS" jdbcType="INTEGER" property="maritalstatus" />
    <result column="BIRTHDATE" jdbcType="TIMESTAMP" property="birthdate" />
    <result column="MAXDEGREE" jdbcType="VARCHAR" property="maxdegree" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    JOBNO, TNAME, PHONE, EMAIL, GENDER, NATIVEPLACE, ENTRYTIME, MARITALSTATUS, BIRTHDATE, 
    MAXDEGREE,COLLEGE
  </sql>
  <sql id="Where_Condition">
  <where>
      <if test="jobno!=null">
  	   and jobno = #{jobno}
  	 </if>
  	 <if test="tname!=null">
  	  and tname = #{tname}
  	 </if>
  	 <if test="college!=null">
  	 and  college = #{college}
  	 </if>
  	 <if test="gender!=null">
  	  and gender = #{gender}
  	 </if>
  	 <if test="entrytimeStart!=null">
  	 and  entrytime >= #{entrytimeStart}
  	 </if>
  	 <if test="entrytimeEnd!=null">
  	 and	entrytime <![CDATA[<=]]> #{entrytimeEnd}
  	 </if>
  	 <if test="maritalstatus!=null">
  	  and   maritalstatus = #{maritalstatus}
  	 </if>
  </where>
  </sql>
  <select id="selectByCondition" parameterType="org.es.service.manager.teacher.TeacherQueryCondition" resultMap="BaseResultMap">
  	  select 
  	  <include refid="Base_Column_List"/>
  	  from teacher
  	  <include refid="Where_Condition"/>
  </select>
  <select id="selectCountByCondition" parameterType="org.es.service.manager.teacher.TeacherQueryCondition" resultType="int">
      select 
      count(1)
      from teacher
      <include refid="Where_Condition"/>
  </select>
  <select id="selectByExample" parameterType="org.es.model.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where JOBNO = #{jobno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teacher
    where JOBNO = #{jobno,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.es.model.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.es.model.Teacher">
    insert into teacher (JOBNO,COLLEGE,TNAME, PHONE, 
      EMAIL, GENDER, NATIVEPLACE, 
      ENTRYTIME, MARITALSTATUS, BIRTHDATE, 
      MAXDEGREE)
    values (#{jobno,jdbcType=VARCHAR},#{college,jdbcType=VARCHAR}, #{tname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{nativeplace,jdbcType=VARCHAR}, 
      #{entrytime,jdbcType=TIMESTAMP}, #{maritalstatus,jdbcType=INTEGER}, #{birthdate,jdbcType=TIMESTAMP}, 
      #{maxdegree,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.es.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobno != null">
        JOBNO,
      </if>
      <if test="college!=null">
      	COLLEGE,
      </if>
      <if test="tname != null">
        TNAME,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="gender != null">
        GENDER,
      </if>
      <if test="nativeplace != null">
        NATIVEPLACE,
      </if>
      <if test="entrytime != null">
        ENTRYTIME,
      </if>
      <if test="maritalstatus != null">
        MARITALSTATUS,
      </if>
      <if test="birthdate != null">
        BIRTHDATE,
      </if>
      <if test="maxdegree != null">
        MAXDEGREE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobno != null">
        #{jobno,jdbcType=VARCHAR},
      </if>
      <if test="college!=null">
        #{college,jdbcType=VARCHAR}
      </if>
      <if test="tname != null">
        #{tname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="entrytime != null">
        #{entrytime,jdbcType=TIMESTAMP},
      </if>
      <if test="maritalstatus != null">
        #{maritalstatus,jdbcType=INTEGER},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="maxdegree != null">
        #{maxdegree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.es.model.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.jobno != null">
        JOBNO = #{record.jobno,jdbcType=VARCHAR},
      </if>
      <if test="record.jobno !=null">
        COLLEGE = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.tname != null">
        TNAME = #{record.tname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        GENDER = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.nativeplace != null">
        NATIVEPLACE = #{record.nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="record.entrytime != null">
        ENTRYTIME = #{record.entrytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.maritalstatus != null">
        MARITALSTATUS = #{record.maritalstatus,jdbcType=INTEGER},
      </if>
      <if test="record.birthdate != null">
        BIRTHDATE = #{record.birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.maxdegree != null">
        MAXDEGREE = #{record.maxdegree,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set JOBNO = #{record.jobno,jdbcType=VARCHAR},
      COLLEGE = #{record.college,jdbcType=VARCHAR},
      TNAME = #{record.tname,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      GENDER = #{record.gender,jdbcType=INTEGER},
      NATIVEPLACE = #{record.nativeplace,jdbcType=VARCHAR},
      ENTRYTIME = #{record.entrytime,jdbcType=TIMESTAMP},
      MARITALSTATUS = #{record.maritalstatus,jdbcType=INTEGER},
      BIRTHDATE = #{record.birthdate,jdbcType=TIMESTAMP},
      MAXDEGREE = #{record.maxdegree,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.es.model.Teacher">
    update teacher
    <set>
      <if test="college != null">
      	COLLEGE = #{college,jdbcType=VARCHAR},
      </if>
      <if test="tname != null">
        TNAME = #{tname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        GENDER = #{gender,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        NATIVEPLACE = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="entrytime != null">
        ENTRYTIME = #{entrytime,jdbcType=TIMESTAMP},
      </if>
      <if test="maritalstatus != null">
        MARITALSTATUS = #{maritalstatus,jdbcType=INTEGER},
      </if>
      <if test="birthdate != null">
        BIRTHDATE = #{birthdate,jdbcType=TIMESTAMP},
      </if>
      <if test="maxdegree != null">
        MAXDEGREE = #{maxdegree,jdbcType=VARCHAR},
      </if>
    </set>
    where JOBNO = #{jobno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.es.model.Teacher">
    update teacher
    set 
    COLLEGE = #{college,jdbcType=VARCHAR},
    TNAME = #{tname,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=INTEGER},
      NATIVEPLACE = #{nativeplace,jdbcType=VARCHAR},
      ENTRYTIME = #{entrytime,jdbcType=TIMESTAMP},
      MARITALSTATUS = #{maritalstatus,jdbcType=INTEGER},
      BIRTHDATE = #{birthdate,jdbcType=TIMESTAMP},
      MAXDEGREE = #{maxdegree,jdbcType=VARCHAR}
    where JOBNO = #{jobno,jdbcType=VARCHAR}
  </update>
</mapper>